# Generated by Django 5.0.2 on 2024-03-03 05:55

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('shops', '0002_categorymodel_goodmodel'),
    ]

    operations = [
        migrations.CreateModel(
            name='CollectModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shops.goodmodel', verbose_name='所属商品')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shops.userinfomodel', verbose_name='所属用户')),
            ],
            options={
                'verbose_name': '收藏信息',
                'verbose_name_plural': '收藏信息',
                'db_table': 'db_collect',
            },
        ),
        migrations.CreateModel(
            name='CommentModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='评论内容')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shops.goodmodel', verbose_name='所属商品')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shops.userinfomodel', verbose_name='所属用户')),
            ],
            options={
                'verbose_name': '评论信息',
                'verbose_name_plural': '评论信息',
                'db_table': 'db_comment',
            },
        ),
        migrations.CreateModel(
            name='HotModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='名称')),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shops.goodmodel', verbose_name='热门商品')),
            ],
            options={
                'verbose_name': '热门商品',
                'verbose_name_plural': '热门商品',
                'db_table': 'db_hot',
            },
        ),
        migrations.CreateModel(
            name='OrderModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_buy', models.BooleanField(default=False, verbose_name='是否购买')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shops.goodmodel', verbose_name='所属商品')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shops.userinfomodel', verbose_name='所属用户')),
            ],
            options={
                'verbose_name': '用户订单',
                'verbose_name_plural': '用户订单',
                'db_table': 'db_order',
            },
        ),
        migrations.CreateModel(
            name='RatingModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField(verbose_name='评分')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shops.goodmodel', verbose_name='所属商品')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shops.userinfomodel', verbose_name='所属用户')),
            ],
            options={
                'verbose_name': '评分信息',
                'verbose_name_plural': '评分信息',
                'db_table': 'db_rating',
            },
        ),
    ]
